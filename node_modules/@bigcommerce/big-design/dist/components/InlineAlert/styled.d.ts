/// <reference types="react" />
import { DefaultTheme, StyledComponent } from 'styled-components';
import { TextProps } from '../Typography/types';
import { InlineAlertProps } from './InlineAlert';
export declare const StyledInlineAlert: StyledComponent<import("react").ForwardRefExoticComponent<import("../Box/Box").BoxProps & Partial<{
    gridAreas: import("../../types").ResponsiveProp<string>;
    gridAutoColumns: import("../../types").ResponsiveProp<string>;
    gridAutoFlow: import("../../types").ResponsiveProp<"inherit" | "initial" | "unset" | "row" | "column" | "dense" | "row dense" | "column dense">;
    gridAutoRows: import("../../types").ResponsiveProp<string>;
    gridColumns: import("../../types").ResponsiveProp<string>;
    gridGap: import("../../types").ResponsiveProp<string>;
    gridRows: import("../../types").ResponsiveProp<string>;
    gridTemplate: import("../../types").ResponsiveProp<string>;
}> & import("react").RefAttributes<HTMLDivElement>>, DefaultTheme, InlineAlertProps, never>;
export declare const StyledHeader: StyledComponent<"h4", DefaultTheme, import("../Typography/types").HeadingProps, never>;
export declare const StyledMessageItem: StyledComponent<"span", DefaultTheme, TextProps, never>;
export declare const StyledLink: StyledComponent<import("react").ForwardRefExoticComponent<import("../Link/Link").LinkProps & import("react").RefAttributes<HTMLAnchorElement>>, DefaultTheme, {}, never>;
export declare const StyledActionsWrapper: StyledComponent<import("react").ForwardRefExoticComponent<import("../Box/Box").BoxProps & Partial<{
    alignContent: import("../../types").ResponsiveProp<"end" | "baseline" | "start" | "center" | "normal" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | "stretch">;
    alignItems: import("../../types").ResponsiveProp<"end" | "baseline" | "start" | "center" | "normal" | "flex-start" | "flex-end" | "stretch" | "self-start" | "self-end">;
    flexDirection: import("../../types").ResponsiveProp<"row" | "column" | "row-reverse" | "column-reverse">;
    flexWrap: import("../../types").ResponsiveProp<"wrap" | "nowrap" | "wrap-reversed">;
    justifyContent: import("../../types").ResponsiveProp<"end" | "baseline" | "start" | "left" | "center" | "right" | "normal" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | "stretch">;
}> & import("react").RefAttributes<HTMLDivElement>>, DefaultTheme, {}, never>;
//# sourceMappingURL=styled.d.ts.map