import { ThemeInterface } from '@bigcommerce/big-design-theme';
import { HTMLAttributes } from 'react';
import { ButtonProps } from '../components/Button';
import { LinkProps } from '../components/Link';
import { MarginProps } from '../mixins/margins';
export interface SharedMessagingProps extends HTMLAttributes<HTMLDivElement> {
    actions?: MessageAction[];
    header?: string;
    messages: MessageItem[];
    type?: MessagingType;
    onClose?(): void;
}
export declare type MessagingType = 'success' | 'error' | 'warning' | 'info';
export declare type MessagingVariant = 'alert' | 'message' | 'inline';
export interface MessageItem {
    text: string;
    link?: MessageLinkItem;
}
export declare type MessageLinkItem = Pick<LinkProps, 'external' | 'href' | 'target'> & {
    text: string;
};
export interface MessageAction extends Omit<ButtonProps, 'children' | 'mobileWidth' | 'variant' | keyof MarginProps> {
    text: string;
    variant?: Exclude<ButtonProps['variant'], 'primary'>;
}
export declare const getMessagingIcon: (type: MessagingType, condensed?: boolean | undefined) => JSX.Element;
export declare const getBorderStyle: (type: MessagingType, theme: ThemeInterface) => import("styled-components").FlattenSimpleInterpolation;
export declare const getActionVariant: (variant: "secondary" | "primary" | "subtle" | undefined) => "secondary" | "subtle" | undefined;
//# sourceMappingURL=messagingHelpers.d.ts.map