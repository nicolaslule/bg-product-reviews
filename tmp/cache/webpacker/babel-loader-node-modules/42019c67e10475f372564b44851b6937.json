{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaslule/Documents/Rails/bg-product-reviews/app/javascript/src/modules/components/pages/summary/summary.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Panel, Text, Grid } from '@bigcommerce/big-design';\nimport Loader from '../../common/Loader';\nimport { ApiService } from '../../../../services/apiServices';\nimport { alertsManager } from \"../../../../app\";\nexport default function Summary(props) {\n  var storeId = props.storeId;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      storeInfo = _useState4[0],\n      setStoreInfo = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      storeInventory = _useState6[0],\n      setInventory = _useState6[1];\n\n  function AddAlert(title, details, type) {\n    var alert = {\n      header: title,\n      messages: [{\n        text: details\n      }],\n      type: type,\n      onClose: function onClose() {\n        return null;\n      }\n    };\n    alertsManager.add(alert);\n  }\n\n  useEffect(function () {\n    ApiService.getStoreInfo({\n      store_id: storeId\n    }).then(function (response) {\n      setStoreInfo(response.data.store_info);\n      setInventory(response.data.store_inventory);\n      setLoading(false);\n    })[\"catch\"](function (error) {\n      console.log(error);\n      AddAlert('Error', 'Unable To Fetch Data, Please Try Again!', 'error');\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }\n  }), !loading && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Panel, {\n    header: \"Store Overview\",\n    action: {\n      variant: 'secondary',\n      text: 'View Storefront',\n      onClick: function onClick() {\n        window.open(\"https://\".concat(storeInfo.domain), '_blank');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"A view in to your BigCommerce storefront.\"), /*#__PURE__*/React.createElement(Box, {\n    backgroundColor: \"white\",\n    border: \"box\",\n    borderRadius: \"normal\",\n    padding: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Domain\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, storeInfo.domain))), /*#__PURE__*/React.createElement(Panel, {\n    header: \"Catalog Summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"A simple overview of your catalog.\"), /*#__PURE__*/React.createElement(Grid, {\n    gridColumns: \"repeat(3, 1fr)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    backgroundColor: \"white\",\n    border: \"box\",\n    borderRadius: \"normal\",\n    padding: \"medium\",\n    display: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Variant Count\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, storeInventory.data.variant_count)), /*#__PURE__*/React.createElement(Box, {\n    backgroundColor: \"white\",\n    border: \"box\",\n    borderRadius: \"normal\",\n    padding: \"medium\",\n    display: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Inventory Count\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, storeInventory.data.inventory_count)), /*#__PURE__*/React.createElement(Box, {\n    backgroundColor: \"white\",\n    border: \"box\",\n    borderRadius: \"normal\",\n    padding: \"medium\",\n    display: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Inventory Value\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, storeInfo.currency_symbol, \" \", storeInventory.data.inventory_value))))));\n}","map":{"version":3,"sources":["/Users/nicolaslule/Documents/Rails/bg-product-reviews/app/javascript/src/modules/components/pages/summary/summary.jsx"],"names":["React","useState","useEffect","Box","Panel","Text","Grid","Loader","ApiService","alertsManager","Summary","props","storeId","loading","setLoading","storeInfo","setStoreInfo","storeInventory","setInventory","AddAlert","title","details","type","alert","header","messages","text","onClose","add","getStoreInfo","store_id","then","response","data","store_info","store_inventory","error","console","log","variant","onClick","window","open","domain","fontSize","variant_count","inventory_count","currency_symbol","inventory_value"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,IAA3B,QAAuC,yBAAvC;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,UAAR,QAAyB,kCAAzB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,MAChCC,OADgC,GACrBD,KADqB,CAChCC,OADgC;;AAAA,kBAEPX,QAAQ,CAAC,IAAD,CAFD;AAAA;AAAA,MAE9BY,OAF8B;AAAA,MAErBC,UAFqB;;AAAA,mBAGHb,QAAQ,CAAC,EAAD,CAHL;AAAA;AAAA,MAG9Bc,SAH8B;AAAA,MAGnBC,YAHmB;;AAAA,mBAIEf,QAAQ,CAAC,EAAD,CAJV;AAAA;AAAA,MAI9BgB,cAJ8B;AAAA,MAIdC,YAJc;;AAMrC,WAASC,QAAT,CAAkBC,KAAlB,EAAyBC,OAAzB,EAAkCC,IAAlC,EAAwC;AACtC,QAAMC,KAAK,GAAG;AACZC,MAAAA,MAAM,EAAEJ,KADI;AAEZK,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,IAAI,EAAEL;AADR,OADQ,CAFE;AAOZC,MAAAA,IAAI,EAAEA,IAPM;AAQZK,MAAAA,OAAO,EAAE;AAAA,eAAM,IAAN;AAAA;AARG,KAAd;AAUAlB,IAAAA,aAAa,CAACmB,GAAd,CAAkBL,KAAlB;AACD;;AAEDrB,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,UAAU,CAACqB,YAAX,CAAwB;AAACC,MAAAA,QAAQ,EAAElB;AAAX,KAAxB,EACGmB,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxBhB,MAAAA,YAAY,CAACgB,QAAQ,CAACC,IAAT,CAAcC,UAAf,CAAZ;AACAhB,MAAAA,YAAY,CAACc,QAAQ,CAACC,IAAT,CAAcE,eAAf,CAAZ;AACArB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH,WAMS,UAAUsB,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAjB,MAAAA,QAAQ,CAAC,OAAD,EAAU,yCAAV,EAAqD,OAArD,CAAR;AACD,KATH;AAUD,GAXQ,EAWP,EAXO,CAAT;AAaA,sBACE,0CACIN,OAAO,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADf,EAGI,CAACA,OAAD,iBACF,uDACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAC,gBAAd;AACO,IAAA,MAAM,EAAE;AACN0B,MAAAA,OAAO,EAAE,WADH;AAENb,MAAAA,IAAI,EAAE,iBAFA;AAGNc,MAAAA,OAAO,EAAE,mBAAM;AACbC,QAAAA,MAAM,CAACC,IAAP,mBAAuB3B,SAAS,CAAC4B,MAAjC,GAA2C,QAA3C;AACD;AALK,KADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAPF,eAQE,oBAAC,GAAD;AAAK,IAAA,eAAe,EAAC,OAArB;AAA6B,IAAA,MAAM,EAAC,KAApC;AAA0C,IAAA,YAAY,EAAC,QAAvD;AAAgE,IAAA,OAAO,EAAC,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI5B,SAAS,CAAC4B,MAAd,CAFF,CARF,CADF,eAcE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,eAEE,oBAAC,IAAD;AAAM,IAAA,WAAW,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,eAAe,EAAC,OAArB;AAA6B,IAAA,MAAM,EAAC,KAApC;AAA0C,IAAA,YAAY,EAAC,QAAvD;AAAgE,IAAA,OAAO,EAAC,QAAxE;AAAiF,IAAA,OAAO,EAAC,QAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC3B,cAAc,CAACgB,IAAf,CAAoBY,aAArD,CAFF,CADF,eAKE,oBAAC,GAAD;AAAK,IAAA,eAAe,EAAC,OAArB;AAA6B,IAAA,MAAM,EAAC,KAApC;AAA0C,IAAA,YAAY,EAAC,QAAvD;AAAgE,IAAA,OAAO,EAAC,QAAxE;AAAiF,IAAA,OAAO,EAAC,QAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAG,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAAE;AAAZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC3B,cAAc,CAACgB,IAAf,CAAoBa,eAArD,CAFF,CALF,eASE,oBAAC,GAAD;AAAK,IAAA,eAAe,EAAC,OAArB;AAA6B,IAAA,MAAM,EAAC,KAApC;AAA0C,IAAA,YAAY,EAAC,QAAvD;AAAgE,IAAA,OAAO,EAAC,QAAxE;AAAiF,IAAA,OAAO,EAAC,QAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAG,IAAA,KAAK,EAAE;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC7B,SAAS,CAACgC,eAA3C,OAA6D9B,cAAc,CAACgB,IAAf,CAAoBe,eAAjF,CAFF,CATF,CAFF,CAdF,CAJF,CADF;AAuCE","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { Box, Panel, Text, Grid } from '@bigcommerce/big-design';\n\nimport Loader from '../../common/Loader';\nimport {ApiService} from '../../../../services/apiServices';\nimport {alertsManager} from \"../../../../app\";\n\nexport default function Summary(props) {\n  let {storeId} = props;\n  const [loading, setLoading] = useState(true)\n  const [storeInfo, setStoreInfo] = useState([])\n  const [storeInventory, setInventory] = useState([])\n\n  function AddAlert(title, details, type) {\n    const alert = {\n      header: title,\n      messages: [\n        {\n          text: details,\n        },\n      ],\n      type: type,\n      onClose: () => null,\n    }\n    alertsManager.add(alert);\n  }\n\n  useEffect(() => {\n    ApiService.getStoreInfo({store_id: storeId})\n      .then(function (response) {\n        setStoreInfo(response.data.store_info)\n        setInventory(response.data.store_inventory)\n        setLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        AddAlert('Error', 'Unable To Fetch Data, Please Try Again!', 'error')\n      })\n  },[]);\n\n  return(\n    <>\n      { loading && <Loader />\n      }\n      { !loading &&\n      <>\n        <Panel header=\"Store Overview\"\n               action={{\n                 variant: 'secondary',\n                 text: 'View Storefront',\n                 onClick: () => {\n                   window.open(`https://${storeInfo.domain}`, '_blank')\n                 }}}>\n          <p>A view in to your BigCommerce storefront.</p>\n          <Box backgroundColor=\"white\" border=\"box\" borderRadius=\"normal\" padding=\"medium\">\n            <h3>Domain</h3>\n            <p>{storeInfo.domain}</p>\n          </Box>\n        </Panel>\n        <Panel header=\"Catalog Summary\">\n          <p>A simple overview of your catalog.</p>\n          <Grid gridColumns=\"repeat(3, 1fr)\">\n            <Box backgroundColor=\"white\" border=\"box\" borderRadius=\"normal\" padding=\"medium\" display=\"inline\">\n              <Text>Variant Count</Text>\n              <p style={{ fontSize: '2rem' }}>{storeInventory.data.variant_count}</p>\n            </Box>\n            <Box backgroundColor=\"white\" border=\"box\" borderRadius=\"normal\" padding=\"medium\" display=\"inline\">\n              <Text>Inventory Count</Text>\n              <p style={{ fontSize: '2rem' }}>{storeInventory.data.inventory_count}</p>\n            </Box>\n            <Box backgroundColor=\"white\" border=\"box\" borderRadius=\"normal\" padding=\"medium\" display=\"inline\">\n              <Text>Inventory Value</Text>\n              <p style={{ fontSize: '2rem' }}>{storeInfo.currency_symbol} {storeInventory.data.inventory_value}</p>\n            </Box>\n          </Grid>\n        </Panel>\n      </>\n      }\n    </>\n  )}\n"]},"metadata":{},"sourceType":"module"}