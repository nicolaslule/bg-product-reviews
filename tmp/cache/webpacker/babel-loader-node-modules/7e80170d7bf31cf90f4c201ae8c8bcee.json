{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { ExpandMoreIcon } from '@bigcommerce/big-design-icons';\nimport React, { useState } from 'react';\nimport { useUniqueId } from '../../hooks';\nimport { Box } from '../Box';\nimport { StyledButton } from './styled';\nexport var Collapse = function Collapse(_ref) {\n  var children = _ref.children,\n      title = _ref.title,\n      onCollapseChange = _ref.onCollapseChange,\n      _ref$initiallyOpen = _ref.initiallyOpen,\n      initiallyOpen = _ref$initiallyOpen === void 0 ? false : _ref$initiallyOpen;\n\n  var _useState = useState(initiallyOpen),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var triggerId = useUniqueId('collapse-title');\n  var panelId = useUniqueId('collapse-panel');\n\n  var handleTitleClick = function handleTitleClick() {\n    var nextIsOpen = !isOpen;\n    setIsOpen(nextIsOpen);\n\n    if (typeof onCollapseChange === 'function') {\n      onCollapseChange(nextIsOpen);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledButton, {\n    \"aria-expanded\": isOpen,\n    \"aria-controls\": panelId,\n    iconRight: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      title: title\n    }),\n    id: triggerId,\n    isOpen: isOpen,\n    variant: \"subtle\",\n    onClick: handleTitleClick,\n    marginVertical: \"small\"\n  }, title), /*#__PURE__*/React.createElement(Box, {\n    \"aria-labelledby\": triggerId,\n    display: isOpen ? 'block' : 'none',\n    id: panelId,\n    hidden: !isOpen,\n    role: \"region\"\n  }, children));\n};","map":null,"metadata":{},"sourceType":"module"}