{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { isValidElement, memo, useMemo } from 'react';\nimport { warning } from '../../utils';\nimport { FieldsetDescription } from './Description';\nimport { FieldsetLegend } from './Legend';\nimport { StyledFieldset } from './styled';\nexport var Fieldset = /*#__PURE__*/memo(function (_ref) {\n  var className = _ref.className,\n      legend = _ref.legend,\n      description = _ref.description,\n      children = _ref.children,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, [\"className\", \"legend\", \"description\", \"children\", \"style\"]);\n\n  var renderedLegend = useMemo(function () {\n    if (typeof legend === 'string') {\n      return /*#__PURE__*/React.createElement(FieldsetLegend, null, legend);\n    }\n\n    if ( /*#__PURE__*/ /*#__PURE__*/isValidElement(legend) && legend.type === FieldsetLegend) {\n      return legend;\n    }\n\n    if (!legend) {\n      return null;\n    }\n\n    warning('legend must be either a string or a FieldsetLegend component.');\n  }, [legend]);\n  var renderedDescription = useMemo(function () {\n    if (typeof description === 'string') {\n      return /*#__PURE__*/React.createElement(FieldsetDescription, null, description);\n    }\n\n    if ( /*#__PURE__*/ /*#__PURE__*/isValidElement(description) && description.type === FieldsetDescription) {\n      return description;\n    }\n\n    if (!description) {\n      return null;\n    }\n\n    warning('description must be either a string or a FieldsetDescription component.');\n  }, [description]);\n  return /*#__PURE__*/React.createElement(StyledFieldset, props, renderedLegend, renderedDescription, children);\n});","map":null,"metadata":{},"sourceType":"module"}