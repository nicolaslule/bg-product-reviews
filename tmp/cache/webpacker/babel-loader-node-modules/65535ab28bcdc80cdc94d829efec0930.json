{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useCallback, useEffect } from 'react';\nimport { useRafState } from './useRafState';\n\nvar getSize = function getSize(element) {\n  return {\n    height: element ? element.offsetHeight : 0,\n    width: element ? element.offsetWidth : 0\n  };\n};\n\nexport var useComponentSize = function useComponentSize(ref) {\n  var _useRafState = useRafState(getSize(ref.current)),\n      _useRafState2 = _slicedToArray(_useRafState, 2),\n      size = _useRafState2[0],\n      setSize = _useRafState2[1];\n\n  var handleResize = useCallback(function () {\n    if (ref.current) {\n      setSize(getSize(ref.current));\n    }\n  }, [ref, setSize]);\n  useEffect(function () {\n    if (!ref.current) {\n      return;\n    }\n\n    handleResize();\n\n    if (typeof MutationObserver === 'function') {\n      var observer = new MutationObserver(handleResize);\n      observer.observe(ref.current, {\n        childList: true\n      });\n      return function () {\n        observer.disconnect();\n      };\n    }\n  }, [ref, handleResize]);\n  return size;\n};","map":null,"metadata":{},"sourceType":"module"}