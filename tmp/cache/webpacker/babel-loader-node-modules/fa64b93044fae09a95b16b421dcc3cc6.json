{"ast":null,"code":"import { CheckCircleIcon, ErrorIcon } from '@bigcommerce/big-design-icons';\nimport React, { useMemo } from 'react';\nimport { typedMemo } from '../../utils';\nimport { CIRCLE_DIMENSIONS } from './constants';\nimport { StyledCircle, StyledCircleFiller, StyledProgressCircle, StyledText } from './styled';\nexport var ProgressCircle = typedMemo(function (_ref) {\n  var error = _ref.error,\n      percent = _ref.percent,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'medium' : _ref$size;\n  var dimensions = CIRCLE_DIMENSIONS[size];\n  var renderedError = useMemo(function () {\n    return /*#__PURE__*/React.createElement(ErrorIcon, {\n      \"aria-valuemax\": 100,\n      \"aria-valuemin\": 0,\n      \"aria-valuenow\": percent ? percent : 0,\n      \"aria-valuetext\": \"Error\",\n      color: \"danger\",\n      role: \"progressbar\",\n      size: dimensions\n    });\n  }, [percent, dimensions]);\n  var renderedSuccess = useMemo(function () {\n    return /*#__PURE__*/React.createElement(CheckCircleIcon, {\n      \"aria-valuemax\": 100,\n      \"aria-valuemin\": 0,\n      \"aria-valuenow\": 100,\n      color: \"success\",\n      role: \"progressbar\",\n      size: dimensions\n    });\n  }, [dimensions]);\n  var renderedCircle = useMemo(function () {\n    if (typeof percent !== 'number') {\n      return /*#__PURE__*/React.createElement(StyledProgressCircle, {\n        role: \"progressbar\",\n        size: size\n      }, /*#__PURE__*/React.createElement(StyledCircle, {\n        size: size\n      }), /*#__PURE__*/React.createElement(StyledCircleFiller, {\n        size: size\n      }));\n    }\n\n    if (percent === 100) {\n      return renderedSuccess;\n    }\n\n    return /*#__PURE__*/React.createElement(StyledProgressCircle, {\n      \"aria-valuemax\": 100,\n      \"aria-valuemin\": 0,\n      \"aria-valuenow\": percent,\n      role: \"progressbar\",\n      size: size\n    }, /*#__PURE__*/React.createElement(StyledCircle, {\n      size: size\n    }), /*#__PURE__*/React.createElement(StyledCircleFiller, {\n      percent: percent,\n      size: size\n    }), (size === 'large' || size === 'medium') && /*#__PURE__*/React.createElement(StyledText, {\n      size: size\n    }, percent ? Math.floor(percent) : 0, \"%\"));\n  }, [percent, size, renderedSuccess]);\n  return error ? renderedError : renderedCircle;\n});","map":null,"metadata":{},"sourceType":"module"}