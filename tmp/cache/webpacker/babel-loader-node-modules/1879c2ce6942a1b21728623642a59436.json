{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { cloneElement, forwardRef, isValidElement, useMemo } from 'react';\nimport { useUniqueId } from '../../hooks';\nimport { typedMemo, warning } from '../../utils';\nimport { FormControlDescription } from '../Form';\nimport { RadioLabel } from './Label';\nimport { HiddenRadio, RadioContainer, RadioLabelContainer, StyledRadio } from './styled';\n\nvar RawRadio = function RawRadio(_ref) {\n  var checked = _ref.checked,\n      className = _ref.className,\n      description = _ref.description,\n      disabled = _ref.disabled,\n      label = _ref.label,\n      forwardedRef = _ref.forwardedRef,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, [\"checked\", \"className\", \"description\", \"disabled\", \"label\", \"forwardedRef\", \"style\"]);\n\n  var uniqueRadioId = useUniqueId('radio');\n  var id = props.id ? props.id : uniqueRadioId;\n  var labelId = useUniqueId('radio_label');\n  var renderedLabel = useMemo(function () {\n    if (!label) {\n      return null;\n    }\n\n    if (typeof label === 'string') {\n      return /*#__PURE__*/React.createElement(RadioLabel, {\n        htmlFor: id,\n        id: labelId,\n        disabled: disabled,\n        \"aria-hidden\": disabled\n      }, label);\n    }\n\n    if ( /*#__PURE__*/ /*#__PURE__*/isValidElement(label) && label.type === RadioLabel) {\n      return /*#__PURE__*/cloneElement(label, {\n        htmlFor: id,\n        id: labelId\n      });\n    }\n\n    warning('label must be either a string or a RadioLabel component.');\n  }, [disabled, id, label, labelId]);\n  var renderedDescription = useMemo(function () {\n    if (!description) {\n      return null;\n    }\n\n    var link = _typeof(description) === 'object' ? description.link : undefined;\n    var text = _typeof(description) === 'object' ? description.text : description;\n    return /*#__PURE__*/React.createElement(FormControlDescription, {\n      link: link\n    }, text);\n  }, [description]);\n  return /*#__PURE__*/React.createElement(RadioContainer, {\n    className: className,\n    style: style\n  }, /*#__PURE__*/React.createElement(HiddenRadio, _extends({\n    type: \"radio\",\n    checked: checked,\n    id: id,\n    disabled: disabled\n  }, props, {\n    \"aria-labelledby\": labelId,\n    ref: forwardedRef\n  })), /*#__PURE__*/React.createElement(StyledRadio, {\n    checked: checked,\n    disabled: disabled,\n    htmlFor: id,\n    \"aria-hidden\": true\n  }), /*#__PURE__*/React.createElement(RadioLabelContainer, null, renderedLabel, renderedDescription));\n};\n\nexport var Radio = typedMemo( /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var className = _ref2.className,\n      style = _ref2.style,\n      props = _objectWithoutProperties(_ref2, [\"className\", \"style\"]);\n\n  return /*#__PURE__*/React.createElement(RawRadio, _extends({}, props, {\n    forwardedRef: ref\n  }));\n}));","map":null,"metadata":{},"sourceType":"module"}