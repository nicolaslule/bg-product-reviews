{"ast":null,"code":"import * as React from 'react';\nimport { createSource, source } from \"./context\";\nimport { UID } from \"./UIDComponent\";\n/**\n * UID isolation component, required for SSR and testing.\n * Wrap your application with it to guarantee UID consistency between SSR and CSR.\n * @param {String} [prefix] - prefix for all generated ids\n * @example\n * <UIDReset>\n *    <App />\n * </UIDReset/>\n * @see https://github.com/thearnica/react-uid#server-side-friendly-uid\n */\n\nexport var UIDReset = function UIDReset(_a) {\n  var children = _a.children,\n      _b = _a.prefix,\n      prefix = _b === void 0 ? '' : _b;\n  return /*#__PURE__*/React.createElement(source.Provider, {\n    value: createSource(prefix)\n  }, children);\n};\n/**\n * Creates a sub-ids for nested components, isolating from inside a branch.\n * Useful for self-contained elements or code splitting\n * @see https://github.com/thearnica/react-uid#code-splitting\n */\n\nexport var UIDFork = function UIDFork(_a) {\n  var children = _a.children,\n      _b = _a.prefix,\n      prefix = _b === void 0 ? '' : _b;\n  return /*#__PURE__*/React.createElement(UIDConsumer, null, function (id) {\n    return /*#__PURE__*/React.createElement(source.Provider, {\n      value: createSource(id + '-' + prefix)\n    }, children);\n  });\n};\n/**\n * UID in form of renderProps. Supports nesting and SSR. Prefer {@link useUID} hook version if possible.\n * @see https://github.com/thearnica/react-uid#server-side-friendly-uid\n * @see https://github.com/thearnica/react-uid#react-components\n * @example\n * // get UID to connect label to input\n * <UIDConsumer>\n *   {(id)} => <label htmlFor={id}><input id={id}/>}\n * </UIDConsumer>\n *\n * // get uid to generate uid for a keys in a list\n * <UIDConsumer>\n *   {(, uid)} => items.map(item => <li key={uid(item) />)}\n * </UIDConsumer>\n *\n * @see {@link useUID} - a hook version of this component\n * @see {@link UID} - not SSR compatible version\n */\n\nexport var UIDConsumer = function UIDConsumer(_a) {\n  var name = _a.name,\n      children = _a.children;\n  return /*#__PURE__*/React.createElement(source.Consumer, null, function (value) {\n    return /*#__PURE__*/React.createElement(UID, {\n      name: name,\n      idSource: value,\n      children: children\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"module"}