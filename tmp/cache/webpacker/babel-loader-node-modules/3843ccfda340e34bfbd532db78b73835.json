{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction getTimeIntervals24hr() {\n  var times = ['00:00'];\n\n  for (var i = 1; i < 24; i++) {\n    times.push(\"\".concat(i, \":00\"));\n  }\n\n  times.push('23:59');\n  return times.map(function (time) {\n    return {\n      value: time,\n      content: time\n    };\n  });\n}\n\nvar defaultTimeIntervals = getTimeIntervals24hr();\nexport var createLocalizationProvider = function createLocalizationProvider(locale) {\n  var dayFormatter = Intl.DateTimeFormat(locale, {\n    weekday: 'short'\n  });\n  var monthFormatter = Intl.DateTimeFormat(locale, {\n    month: 'long'\n  });\n  var monthsLong = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(function (month) {\n    return monthFormatter.format(new Date(0, month, 1));\n  });\n  var daysShort = [0, 1, 2, 3, 4, 5, 6].map(function (day) {\n    return dayFormatter.format(new Date(0, 9, day, 12));\n  });\n  var timeFormatter = Intl.DateTimeFormat(locale, {\n    hour: 'numeric',\n    minute: 'numeric'\n  });\n  return {\n    code: locale,\n    localize: {\n      month: function month(n) {\n        return monthsLong[n];\n      },\n      day: function day(n) {\n        return daysShort[n];\n      }\n    },\n    monthsLong: monthsLong,\n    // Required by datepicker.\n    formatLong: {},\n    formatTime: timeFormatter.format\n  };\n};\nexport function getTimeIntervals(localization) {\n  var localizedTimeIntervals = defaultTimeIntervals.map(function (time) {\n    var baseDate = new Date();\n\n    var _time$value$split = time.value.split(':'),\n        _time$value$split2 = _slicedToArray(_time$value$split, 2),\n        hour = _time$value$split2[0],\n        minute = _time$value$split2[1];\n\n    baseDate.setHours(parseInt(hour, 10));\n    baseDate.setMinutes(parseInt(minute, 0));\n    return {\n      content: localization.formatTime(baseDate),\n      value: time.value\n    };\n  });\n  return localizedTimeIntervals;\n}","map":null,"metadata":{},"sourceType":"module"}