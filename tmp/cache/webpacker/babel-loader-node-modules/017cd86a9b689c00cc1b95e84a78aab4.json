{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { typedMemo } from '../../../utils';\nimport { FlexItem } from '../../Flex';\nimport { Text } from '../../Typography';\nimport { SelectAll } from '../SelectAll';\nimport { TablePagination } from '../TablePagination';\nimport { StyledFlex } from './styled';\n\nvar InternalActions = function InternalActions(_ref) {\n  var customActions = _ref.customActions,\n      forwardedRef = _ref.forwardedRef,\n      itemName = _ref.itemName,\n      _ref$items = _ref.items,\n      items = _ref$items === void 0 ? [] : _ref$items,\n      onSelectionChange = _ref.onSelectionChange,\n      pagination = _ref.pagination,\n      selectedItems = _ref.selectedItems,\n      stickyHeader = _ref.stickyHeader,\n      tableId = _ref.tableId,\n      props = _objectWithoutProperties(_ref, [\"customActions\", \"forwardedRef\", \"itemName\", \"items\", \"onSelectionChange\", \"pagination\", \"selectedItems\", \"stickyHeader\", \"tableId\"]);\n\n  var isSelectable = typeof onSelectionChange === 'function';\n  var totalItems = pagination ? pagination.totalItems : items.length;\n\n  var renderItemName = function renderItemName() {\n    if (typeof itemName !== 'string') {\n      return null;\n    }\n\n    var text = isSelectable ? itemName : \"\".concat(totalItems, \" \").concat(itemName);\n    return /*#__PURE__*/React.createElement(FlexItem, {\n      flexShrink: 0,\n      marginRight: \"medium\"\n    }, /*#__PURE__*/React.createElement(Text, {\n      margin: \"none\"\n    }, text));\n  };\n\n  var renderActions = function renderActions() {\n    var CustomActions = customActions;\n    return CustomActions ? /*#__PURE__*/React.createElement(CustomActions, null) : null;\n  };\n\n  return /*#__PURE__*/React.createElement(StyledFlex, _extends({\n    alignItems: \"center\",\n    \"aria-controls\": tableId,\n    flexDirection: \"row\",\n    justifyContent: \"stretch\",\n    stickyHeader: stickyHeader,\n    ref: forwardedRef\n  }, props), /*#__PURE__*/React.createElement(SelectAll, {\n    onChange: onSelectionChange,\n    selectedItems: selectedItems,\n    items: items,\n    totalItems: totalItems\n  }), renderItemName(), renderActions(), pagination && /*#__PURE__*/React.createElement(TablePagination, pagination));\n};\n\nexport var Actions = typedMemo(InternalActions);","map":null,"metadata":{},"sourceType":"module"}