{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { CloseIcon } from '@bigcommerce/big-design-icons';\nimport React, { memo, useMemo } from 'react';\nimport { excludeMarginProps, excludePaddingProps } from '../../mixins';\nimport { getActionVariant, getMessagingIcon } from '../../utils';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { MessagingButton } from '../Button/private';\nimport { GridItem } from '../Grid';\nimport { StyledActionsWrapper, StyledHeader, StyledLink, StyledMessage, StyledMessageItem } from './styled';\nexport var Message = /*#__PURE__*/memo(function (_ref) {\n  var className = _ref.className,\n      style = _ref.style,\n      header = _ref.header,\n      props = _objectWithoutProperties(_ref, [\"className\", \"style\", \"header\"]);\n\n  var filteredProps = excludePaddingProps(props);\n  var icon = useMemo(function () {\n    return props.type && getMessagingIcon(props.type);\n  }, [props.type]);\n  var renderedMessages = useMemo(function () {\n    return props.messages.map(function (_ref2, index) {\n      var text = _ref2.text,\n          link = _ref2.link;\n      return /*#__PURE__*/React.createElement(Box, {\n        key: index\n      }, /*#__PURE__*/React.createElement(StyledMessageItem, null, text), \" \", link && /*#__PURE__*/React.createElement(StyledLink, link, link.text));\n    });\n  }, [props.messages]);\n  var renderedHeader = useMemo(function () {\n    return header && /*#__PURE__*/React.createElement(StyledHeader, null, header);\n  }, [header]);\n  var renderedActions = useMemo(function () {\n    return props.actions && /*#__PURE__*/React.createElement(StyledActionsWrapper, {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      marginTop: \"xSmall\"\n    }, props.actions.map(function (_ref3, index) {\n      var text = _ref3.text,\n          _ref3$variant = _ref3.variant,\n          variant = _ref3$variant === void 0 ? 'secondary' : _ref3$variant,\n          actionProps = _objectWithoutProperties(_ref3, [\"text\", \"variant\"]);\n\n      return /*#__PURE__*/React.createElement(Button, _extends({}, excludeMarginProps(actionProps), {\n        key: index,\n        marginBottom: \"xSmall\",\n        marginHorizontal: \"xxSmall\",\n        mobileWidth: \"auto\",\n        variant: getActionVariant(variant)\n      }), text);\n    }));\n  }, [props.actions]);\n  return /*#__PURE__*/React.createElement(StyledMessage, _extends({}, filteredProps, {\n    backgroundColor: \"white\",\n    role: \"alert\"\n  }), /*#__PURE__*/React.createElement(GridItem, {\n    gridArea: \"icon\"\n  }, icon), /*#__PURE__*/React.createElement(GridItem, {\n    gridArea: \"messages\"\n  }, renderedHeader, renderedMessages, renderedActions), props.onClose && /*#__PURE__*/React.createElement(GridItem, null, /*#__PURE__*/React.createElement(MessagingButton, {\n    onClick: props.onClose,\n    iconOnly: /*#__PURE__*/React.createElement(CloseIcon, {\n      size: \"large\",\n      title: \"Close.\"\n    })\n  })));\n});\nMessage.defaultProps = {\n  messages: [],\n  type: 'success'\n};","map":null,"metadata":{},"sourceType":"module"}