{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { useCallback, useMemo, useReducer } from 'react';\nimport { useDidUpdate } from '../../hooks';\nimport { typedMemo } from '../../utils';\nimport { Table } from '../Table';\nimport { createReducer, createReducerInit } from './reducer';\n\nvar InternalStatefulTable = function InternalStatefulTable(_ref) {\n  var _ref$columns = _ref.columns,\n      columns = _ref$columns === void 0 ? [] : _ref$columns,\n      _ref$defaultSelected = _ref.defaultSelected,\n      defaultSelected = _ref$defaultSelected === void 0 ? [] : _ref$defaultSelected,\n      itemName = _ref.itemName,\n      _ref$items = _ref.items,\n      items = _ref$items === void 0 ? [] : _ref$items,\n      keyField = _ref.keyField,\n      onSelectionChange = _ref.onSelectionChange,\n      _ref$pagination = _ref.pagination,\n      pagination = _ref$pagination === void 0 ? false : _ref$pagination,\n      _ref$selectable = _ref.selectable,\n      selectable = _ref$selectable === void 0 ? false : _ref$selectable,\n      _ref$stickyHeader = _ref.stickyHeader,\n      stickyHeader = _ref$stickyHeader === void 0 ? false : _ref$stickyHeader,\n      rest = _objectWithoutProperties(_ref, [\"columns\", \"defaultSelected\", \"itemName\", \"items\", \"keyField\", \"onSelectionChange\", \"pagination\", \"selectable\", \"stickyHeader\"]);\n\n  var reducer = useMemo(function () {\n    return createReducer();\n  }, []);\n  var reducerInit = useMemo(function () {\n    return createReducerInit();\n  }, []);\n  var sortable = useMemo(function () {\n    return columns.some(function (column) {\n      return column.sortKey || column.sortFn;\n    });\n  }, [columns]);\n\n  var _useReducer = useReducer(reducer, {\n    columns: columns,\n    defaultSelected: defaultSelected,\n    items: items,\n    pagination: pagination\n  }, reducerInit),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var columnsChangedCallback = useCallback(function () {\n    return dispatch({\n      type: 'COLUMNS_CHANGED',\n      columns: columns\n    });\n  }, [columns]);\n  var itemsChangedCallback = useCallback(function () {\n    return dispatch({\n      type: 'ITEMS_CHANGED',\n      items: items,\n      isPaginationEnabled: pagination\n    });\n  }, [items, pagination]);\n  useDidUpdate(columnsChangedCallback);\n  useDidUpdate(itemsChangedCallback);\n  var onPageChange = useCallback(function (page) {\n    return dispatch({\n      type: 'PAGE_CHANGE',\n      page: page\n    });\n  }, []);\n  var onItemsPerPageChange = useCallback(function (itemsPerPage) {\n    return dispatch({\n      type: 'ITEMS_PER_PAGE_CHANGE',\n      itemsPerPage: itemsPerPage\n    });\n  }, []);\n  var onItemSelect = useCallback(function (selectedItems) {\n    dispatch({\n      type: 'SELECTED_ITEMS',\n      selectedItems: selectedItems\n    });\n\n    if (typeof onSelectionChange === 'function') {\n      onSelectionChange(selectedItems);\n    }\n  }, [onSelectionChange]);\n  var onSort = useCallback(function (_columnHash, direction, column) {\n    dispatch({\n      type: 'SORT',\n      column: column,\n      direction: direction\n    });\n  }, []);\n  var paginationOptions = useMemo(function () {\n    return pagination ? _objectSpread(_objectSpread({}, state.pagination), {}, {\n      onItemsPerPageChange: onItemsPerPageChange,\n      onPageChange: onPageChange\n    }) : undefined;\n  }, [pagination, state.pagination, onItemsPerPageChange, onPageChange]);\n  var selectableOptions = useMemo(function () {\n    return selectable ? {\n      selectedItems: state.selectedItems,\n      onSelectionChange: onItemSelect\n    } : undefined;\n  }, [selectable, state.selectedItems, onItemSelect]);\n  var sortableOptions = useMemo(function () {\n    return sortable ? _objectSpread(_objectSpread({}, state.sortable), {}, {\n      onSort: onSort\n    }) : undefined;\n  }, [sortable, state.sortable, onSort]);\n  return /*#__PURE__*/React.createElement(Table, _extends({}, rest, {\n    columns: state.columns,\n    itemName: itemName,\n    items: state.currentItems,\n    keyField: keyField,\n    stickyHeader: stickyHeader,\n    pagination: paginationOptions,\n    selectable: selectableOptions,\n    sortable: sortableOptions\n  }));\n};\n\nexport var StatefulTable = typedMemo(InternalStatefulTable);","map":null,"metadata":{},"sourceType":"module"}