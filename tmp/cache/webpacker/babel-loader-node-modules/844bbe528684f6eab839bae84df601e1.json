{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from 'react';\nimport { Checkbox } from '../../Checkbox';\nimport { Flex, FlexItem } from '../../Flex';\nimport { Text } from '../../Typography';\nexport var SelectAll = function SelectAll(_ref) {\n  var _ref$items = _ref.items,\n      items = _ref$items === void 0 ? [] : _ref$items,\n      onChange = _ref.onChange,\n      selectedItems = _ref.selectedItems,\n      totalItems = _ref.totalItems;\n  var allInPageSelected = items.length > 0 && items.every(function (item) {\n    return selectedItems.has(item);\n  });\n  var someInPageSelected = items.length > 0 && items.some(function (item) {\n    return selectedItems.has(item);\n  });\n\n  var handleSelectAll = function handleSelectAll() {\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (selectedItems.size === 0) {\n      return onChange(_toConsumableArray(items));\n    }\n\n    if (allInPageSelected) {\n      var newSelectedItems = new Set(selectedItems);\n      items.forEach(function (item) {\n        return newSelectedItems[\"delete\"](item);\n      });\n      return onChange(_toConsumableArray(newSelectedItems));\n    }\n\n    return onChange(_toConsumableArray(new Set([].concat(_toConsumableArray(selectedItems), _toConsumableArray(items)))));\n  };\n\n  if (typeof onChange !== 'function') {\n    return null;\n  }\n\n  var totalSelectedItems = selectedItems.size;\n  var label = allInPageSelected ? 'Deselect All' : 'Select All';\n  return /*#__PURE__*/React.createElement(FlexItem, {\n    marginRight: \"xxSmall\",\n    flexShrink: 0\n  }, /*#__PURE__*/React.createElement(Flex, {\n    flexDirection: \"row\"\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    isIndeterminate: someInPageSelected,\n    hiddenLabel: true,\n    label: label,\n    checked: allInPageSelected,\n    onChange: handleSelectAll\n  }), /*#__PURE__*/React.createElement(Text, {\n    marginLeft: \"small\"\n  }, totalSelectedItems === 0 ? \"\".concat(totalItems) : \"\".concat(totalSelectedItems, \"/\").concat(totalItems))));\n};","map":null,"metadata":{},"sourceType":"module"}