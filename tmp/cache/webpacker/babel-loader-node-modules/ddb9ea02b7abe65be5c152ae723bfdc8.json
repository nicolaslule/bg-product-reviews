{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nexport var createReducerInit = function createReducerInit() {\n  return function (_ref) {\n    var columns = _ref.columns,\n        defaultSelected = _ref.defaultSelected,\n        items = _ref.items,\n        pagination = _ref.pagination;\n    var currentPage = 1;\n    var itemsPerPage = 25;\n    var currentItems = getItems(items, pagination, {\n      currentPage: currentPage,\n      itemsPerPage: itemsPerPage\n    });\n    return {\n      currentItems: currentItems,\n      columns: augmentColumns(columns),\n      isPaginationEnabled: pagination,\n      items: items,\n      pagination: {\n        currentPage: currentPage,\n        itemsPerPage: itemsPerPage,\n        itemsPerPageOptions: [25, 50, 100, 250],\n        totalItems: items.length\n      },\n      selectedItems: defaultSelected,\n      sortable: {\n        direction: 'ASC'\n      }\n    };\n  };\n};\nexport var createReducer = function createReducer() {\n  return function (state, action) {\n    switch (action.type) {\n      case 'COLUMNS_CHANGED':\n        {\n          var columns = action.columns;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            columns: augmentColumns(columns)\n          });\n        }\n\n      case 'ITEMS_CHANGED':\n        {\n          var currentPage = 1;\n          var _items = action.items;\n          var isPaginationEnabled = action.isPaginationEnabled;\n          var currentItems = getItems(_items, isPaginationEnabled, {\n            currentPage: currentPage,\n            itemsPerPage: state.pagination.itemsPerPage\n          });\n          var selectedItems = state.selectedItems.filter(function (item) {\n            return _items.includes(item);\n          });\n          return _objectSpread(_objectSpread({}, state), {}, {\n            currentItems: currentItems,\n            isPaginationEnabled: isPaginationEnabled,\n            items: _items,\n            selectedItems: selectedItems,\n            pagination: _objectSpread(_objectSpread({}, state.pagination), {}, {\n              currentPage: currentPage,\n              totalItems: _items.length\n            }),\n            sortable: {\n              direction: state.sortable.direction\n            }\n          });\n        }\n\n      case 'PAGE_CHANGE':\n        {\n          var _currentPage = action.page;\n\n          var _currentItems = getItems(state.items, true, {\n            currentPage: _currentPage,\n            itemsPerPage: state.pagination.itemsPerPage\n          });\n\n          return _objectSpread(_objectSpread({}, state), {}, {\n            currentItems: _currentItems,\n            pagination: _objectSpread(_objectSpread({}, state.pagination), {}, {\n              currentPage: _currentPage\n            })\n          });\n        }\n\n      case 'ITEMS_PER_PAGE_CHANGE':\n        {\n          var _currentPage2 = 1;\n          var itemsPerPage = action.itemsPerPage;\n\n          var _currentItems2 = getItems(state.items, true, {\n            currentPage: _currentPage2,\n            itemsPerPage: itemsPerPage\n          });\n\n          return _objectSpread(_objectSpread({}, state), {}, {\n            currentItems: _currentItems2,\n            pagination: _objectSpread(_objectSpread({}, state.pagination), {}, {\n              currentPage: _currentPage2,\n              itemsPerPage: itemsPerPage\n            })\n          });\n        }\n\n      case 'SELECTED_ITEMS':\n        {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            selectedItems: action.selectedItems\n          });\n        }\n\n      case 'SORT':\n        {\n          var _action$column = action.column,\n              hash = _action$column.hash,\n              _sortFn = _action$column.sortFn,\n              _sortKey = _action$column.sortKey;\n          var _direction = action.direction;\n\n          if (!_sortKey && !_sortFn) {\n            return state;\n          }\n\n          var _items2 = _sortKey ? sort(state.items, _direction, _sortKey) : _sortFn ? sort(state.items, _direction, _sortFn) : state.items;\n\n          var _currentItems3 = getItems(_items2, state.isPaginationEnabled, {\n            currentPage: 1,\n            itemsPerPage: state.pagination.itemsPerPage\n          });\n\n          return _objectSpread(_objectSpread({}, state), {}, {\n            currentItems: _currentItems3,\n            items: _items2,\n            pagination: _objectSpread(_objectSpread({}, state.pagination), {}, {\n              currentPage: 1\n            }),\n            sortable: {\n              direction: _direction,\n              columnHash: hash\n            }\n          });\n        }\n\n      default:\n        return state;\n    }\n  };\n};\n\nfunction augmentColumns(columns) {\n  return columns.map(function (column) {\n    return _objectSpread(_objectSpread({}, column), {}, {\n      isSortable: Boolean(column.sortKey || column.sortFn)\n    });\n  });\n}\n\nfunction getItems(items, isPaginationEnabled, paginationOptions) {\n  if (!isPaginationEnabled) {\n    return items;\n  }\n\n  var maxItems = paginationOptions.currentPage * paginationOptions.itemsPerPage;\n  var lastItem = Math.min(maxItems, items.length);\n  var firstItem = Math.max(0, maxItems - paginationOptions.itemsPerPage);\n  return items.slice(firstItem, lastItem);\n}\n\nfunction sort(items, direction, sortKeyOrFn) {\n  return _toConsumableArray(items).sort(function (firstItem, secondItem) {\n    if (typeof sortKeyOrFn === 'function') {\n      return sortKeyOrFn(firstItem, secondItem, direction);\n    }\n\n    var sortKey = sortKeyOrFn;\n    var firstValue = firstItem[sortKey];\n    var secondValue = secondItem[sortKey];\n\n    if (typeof firstValue === 'number' && typeof secondValue === 'number') {\n      return direction === 'ASC' ? firstValue - secondValue : secondValue - firstValue;\n    }\n\n    var firstValueString = String(firstValue);\n    var secondValueString = String(secondValue);\n    return direction === 'ASC' ? firstValueString.localeCompare(secondValueString) : secondValueString.localeCompare(firstValueString);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}