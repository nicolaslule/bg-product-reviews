{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect } from 'react';\nimport { isClient } from '../utils';\nimport { useRafState } from './useRafState';\nexport var useWindowSize = function useWindowSize() {\n  var _useRafState = useRafState({\n    height: isClient ? window.innerHeight : -1,\n    width: isClient ? window.innerWidth : -1\n  }),\n      _useRafState2 = _slicedToArray(_useRafState, 2),\n      state = _useRafState2[0],\n      setState = _useRafState2[1];\n\n  useEffect(function () {\n    var resizeHandler = function resizeHandler() {\n      setState({\n        height: window.innerHeight,\n        width: window.innerWidth\n      });\n    };\n\n    window.addEventListener('resize', resizeHandler);\n    return function () {\n      window.removeEventListener('resize', resizeHandler);\n    };\n  }, [setState]);\n\n  if (!isClient) {\n    return state;\n  }\n\n  return state;\n};","map":null,"metadata":{},"sourceType":"module"}