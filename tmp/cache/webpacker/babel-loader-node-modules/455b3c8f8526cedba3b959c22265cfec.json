{"ast":null,"code":"import React from 'react';\nimport { typedMemo } from '../../../utils';\nimport { Checkbox } from '../../Checkbox';\nimport { DataCell } from '../DataCell';\nimport { StyledTableRow } from './styled';\n\nvar InternalRow = function InternalRow(_ref) {\n  var columns = _ref.columns,\n      _ref$isSelectable = _ref.isSelectable,\n      isSelectable = _ref$isSelectable === void 0 ? false : _ref$isSelectable,\n      _ref$isSelected = _ref.isSelected,\n      isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,\n      item = _ref.item,\n      onItemSelect = _ref.onItemSelect;\n\n  var onChange = function onChange() {\n    if (onItemSelect) {\n      onItemSelect(item);\n    }\n  };\n\n  var label = isSelected ? \"Selected\" : \"Unselected\";\n  return /*#__PURE__*/React.createElement(StyledTableRow, {\n    isSelected: isSelected\n  }, isSelectable && /*#__PURE__*/React.createElement(DataCell, {\n    key: \"data-checkbox\",\n    isCheckbox: true\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: isSelected,\n    hiddenLabel: true,\n    label: label,\n    onChange: onChange\n  })), columns.map(function (_ref2, columnIndex) {\n    var CellContent = _ref2.render,\n        align = _ref2.align,\n        verticalAlign = _ref2.verticalAlign,\n        width = _ref2.width,\n        _ref2$withPadding = _ref2.withPadding,\n        withPadding = _ref2$withPadding === void 0 ? true : _ref2$withPadding;\n    return /*#__PURE__*/React.createElement(DataCell, {\n      key: columnIndex,\n      align: align,\n      verticalAlign: verticalAlign,\n      width: width,\n      withPadding: withPadding\n    }, /*#__PURE__*/React.createElement(CellContent, item));\n  }));\n};\n\nexport var Row = typedMemo(InternalRow);","map":null,"metadata":{},"sourceType":"module"}