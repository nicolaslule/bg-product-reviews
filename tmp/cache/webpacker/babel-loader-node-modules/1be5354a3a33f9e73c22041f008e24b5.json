{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport { ProgressCircle } from '../ProgressCircle';\nimport { ContentWrapper, LoadingSpinnerWrapper, StyledButton } from './styled';\nvar RawButton = /*#__PURE__*/memo(function (_ref) {\n  var forwardedRef = _ref.forwardedRef,\n      props = _objectWithoutProperties(_ref, [\"forwardedRef\"]);\n\n  var handleClick = function handleClick(event) {\n    var disabled = props.disabled,\n        isLoading = props.isLoading,\n        onClick = props.onClick;\n\n    if (onClick && !disabled && !isLoading) {\n      onClick(event);\n    }\n  };\n\n  var renderLoadingSpinner = function renderLoadingSpinner() {\n    return /*#__PURE__*/React.createElement(LoadingSpinnerWrapper, {\n      alignItems: \"center\"\n    }, /*#__PURE__*/React.createElement(ProgressCircle, {\n      size: \"xxSmall\"\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(StyledButton, _extends({\n    className: \"bd-button\",\n    role: \"button\",\n    tabIndex: 0\n  }, props, {\n    onClick: handleClick,\n    ref: forwardedRef\n  }), props.isLoading ? renderLoadingSpinner() : null, /*#__PURE__*/React.createElement(ContentWrapper, {\n    isLoading: props.isLoading\n  }, !props.iconOnly && props.iconLeft, props.iconOnly, !props.iconOnly && props.children, !props.iconOnly && props.iconRight));\n});\nexport var StyleableButton = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(RawButton, _extends({}, props, {\n    forwardedRef: ref\n  }));\n});\nexport var Button = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var className = _ref2.className,\n      style = _ref2.style,\n      props = _objectWithoutProperties(_ref2, [\"className\", \"style\"]);\n\n  return /*#__PURE__*/React.createElement(RawButton, _extends({}, props, {\n    forwardedRef: ref\n  }));\n});\nvar defaultProps = {\n  actionType: 'normal',\n  isLoading: false,\n  mobileWidth: '100%',\n  variant: 'primary'\n};\nButton.displayName = 'Button';\nButton.defaultProps = _objectSpread({}, defaultProps);\nStyleableButton.displayName = 'StyleableButton';\nStyleableButton.defaultProps = _objectSpread({}, defaultProps);","map":null,"metadata":{},"sourceType":"module"}