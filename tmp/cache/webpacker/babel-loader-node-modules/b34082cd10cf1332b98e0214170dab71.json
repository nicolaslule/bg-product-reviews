{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar Options = /*#__PURE__*/function () {\n  function Options() {\n    _classCallCheck(this, Options);\n\n    _defineProperty(this, \"options\", {\n      htmlFontSize: 16\n    });\n  }\n\n  _createClass(Options, [{\n    key: \"getOptions\",\n    value: function getOptions() {\n      return _objectSpread({}, this.options);\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(newOptions) {\n      this.options = _objectSpread(_objectSpread({}, this.options), newOptions);\n      return this.getOptions();\n    }\n  }]);\n\n  return Options;\n}();\n\nexport var themeOptions = new Options();","map":null,"metadata":{},"sourceType":"module"}